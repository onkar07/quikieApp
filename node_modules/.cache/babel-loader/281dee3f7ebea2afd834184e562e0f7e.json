{"ast":null,"code":"var _jsxFileName = \"/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css';\nimport gLogo from './img/GOOGL.png';\nimport fb from './img/FB.png';\nimport am from \"./img/AMZN.svg\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dr(props) {\n  const data = [{\n    title: \"googl\",\n    logo: gLogo,\n    val: \"1515\"\n  }, {\n    title: \"fb\",\n    logo: fb,\n    val: \"1515\"\n  }, {\n    title: \"amzn\",\n    logo: am,\n    val: \"1515\"\n  }];\n  const grid = 8;\n\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 ${grid}px 0 0`,\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n    // styles we need to apply on draggables\n    ...draggableStyle\n  });\n\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    // display: 'flex',\n    // padding: grid,\n    overflow: 'auto'\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-1\",\n        type: \"PERSON\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          style: {\n            backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey'\n          },\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: \"draggable-1\",\n            index: 0,\n            children: (provided, snapshot) => {\n              /*#__PURE__*/\n              _jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"grid\",\n                  class: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"col-xs-4 col-sm-2 col-md-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Hello\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"col-xs-4 col-sm-2 col-md-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"world\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this);\n            }\n          }, \"key1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Dr;\nexport default Dr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dr\");","map":{"version":3,"sources":["/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js"],"names":["React","ReactDOM","gLogo","fb","DragDropContext","Droppable","Draggable","Dr","props","data","title","logo","val","am","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","overflow","provided","snapshot","innerRef","backgroundColor","droppableProps","draggableProps","dragHandleProps","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,EAAP,MAAe,cAAf;;AAEA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;;;;AACA,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AACf,QAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,KAAK,EAAC,OADV;AAEIC,IAAAA,IAAI,EAACT,KAFT;AAGIU,IAAAA,GAAG,EAAC;AAHR,GADS,EAMT;AACIF,IAAAA,KAAK,EAAC,IADV;AAEIC,IAAAA,IAAI,EAACR,EAFT;AAGIS,IAAAA,GAAG,EAAC;AAHR,GANS,EAWT;AACIF,IAAAA,KAAK,EAAC,MADV;AAEIC,IAAAA,IAAI,EAACE,EAFT;AAGID,IAAAA,GAAG,EAAC;AAHR,GAXS,CAAb;AAkBA,QAAME,IAAI,GAAG,CAAb;;AACA,QAAMC,YAAY,GAAG,CAACC,UAAD,EAAaC,cAAb,MAAiC;AAClD;AACAC,IAAAA,UAAU,EAAE,MAFsC;AAGlDC,IAAAA,OAAO,EAAEL,IAAI,GAAG,CAHkC;AAIlDM,IAAAA,MAAM,EAAG,KAAIN,IAAK,QAJgC;AAMlD;AACAO,IAAAA,UAAU,EAAEL,UAAU,GAAG,YAAH,GAAkB,MAPU;AASlD;AACA,OAAGC;AAV+C,GAAjC,CAArB;;AAaE,QAAMK,YAAY,GAAGC,cAAc,KAAK;AACtCF,IAAAA,UAAU,EAAEE,cAAc,GAAG,WAAH,GAAiB,WADL;AAEtC;AACA;AACAC,IAAAA,QAAQ,EAAE;AAJ4B,GAAL,CAAnC;;AAMF,sBACI;AAAA,2BACA,QAAC,eAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,aAAvB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA,kBACK,CAACC,QAAD,EAAWC,QAAX,kBACG;AACA,UAAA,GAAG,EAAED,QAAQ,CAACE,QADd;AAEA,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEF,QAAQ,CAACH,cAAT,GAA0B,MAA1B,GAAmC;AAAtD,WAFP;AAAA,aAGIE,QAAQ,CAACI,cAHb;AAAA,kCAKA,QAAC,SAAD;AAAsB,YAAA,WAAW,EAAC,aAAlC;AAAgD,YAAA,KAAK,EAAE,CAAvD;AAAA,sBACC,CAACJ,QAAD,EAAWC,QAAX,KAAwB;AACrB;AAAA;AACA,gBAAA,GAAG,EAAED,QAAQ,CAACE,QADd;AAAA,mBAEIF,QAAQ,CAACK,cAFb;AAAA,mBAGIL,QAAQ,CAACM,eAHb;AAAA,uCAKA;AAAK,kBAAA,EAAE,EAAC,MAAR;AAAe,kBAAA,KAAK,EAAC,KAArB;AAAA,0CACA;AAAK,oBAAA,KAAK,EAAC,4BAAX;AAAA,2CAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAK,oBAAA,KAAK,EAAC,4BAAX;AAAA,2CAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAUH;AAZD,aAAe,MAAf;AAAA;AAAA;AAAA;AAAA,kBALA,EAmBCN,QAAQ,CAACO,WAnBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAgCH;;KAvEQzB,E;AAyET,eAAeA,EAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css'\nimport gLogo from './img/GOOGL.png'\nimport fb from './img/FB.png'\nimport am from './img/AMZN.svg'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nfunction Dr(props) {\n    const data = [\n        {\n            title:\"googl\",\n            logo:gLogo,\n            val:\"1515\"\n        },\n        {\n            title:\"fb\",\n            logo:fb,\n            val:\"1515\"\n        },\n        {\n            title:\"amzn\",\n            logo:am,\n            val:\"1515\"\n        }\n    ]\n\n    const grid = 8;\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        // some basic styles to make the items look a bit nicer\n        userSelect: 'none',\n        padding: grid * 2,\n        margin: `0 ${grid}px 0 0`,\n      \n        // change background colour if dragging\n        background: isDragging ? 'lightgreen' : 'grey',\n      \n        // styles we need to apply on draggables\n        ...draggableStyle,\n      });\n      \n      const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? 'lightblue' : 'lightgrey',\n        // display: 'flex',\n        // padding: grid,\n        overflow: 'auto',\n      });\n    return (\n        <>\n        <DragDropContext>\n            <Droppable droppableId=\"droppable-1\" type=\"PERSON\">\n                {(provided, snapshot) => (\n                    <div\n                    ref={provided.innerRef}\n                    style={{ backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey' }}\n                    {...provided.droppableProps}\n                    >\n                    <Draggable key=\"key1\" draggableId=\"draggable-1\" index={0}>\n                    {(provided, snapshot) => {\n                        <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <div id=\"grid\" class=\"row\">\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>Hello</h1></div>\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>world</h1></div>\n                        </div>\n                        </div>\n                    }}\n                    </Draggable>\n                    {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n        \n        </>\n    )\n}\n\nexport default Dr\n"]},"metadata":{},"sourceType":"module"}