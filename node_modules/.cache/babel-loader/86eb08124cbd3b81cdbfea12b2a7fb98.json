{"ast":null,"code":"var _jsxFileName = \"/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css';\nimport gLogo from './img/GOOGL.png';\nimport fb from './img/FB.png';\nimport am from \"./img/AMZN.svg\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dr(props) {\n  _s();\n\n  const [state, setState] = useState({\n    quotes: initial\n  });\n  const data = [{\n    id: \"1\",\n    title: \"googl\",\n    logo: gLogo,\n    val: \"1515\"\n  }, {\n    id: \"2\",\n    title: \"fb\",\n    logo: fb,\n    val: \"1515\"\n  }, {\n    id: \"3\",\n    title: \"amzn\",\n    logo: am,\n    val: \"1515\"\n  }];\n\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    background: isDragging ? 'lightgreen' : 'grey',\n    ...draggableStyle\n  });\n\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    overflow: 'auto'\n  });\n\n  const onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const quotes = reorder(state.quotes, result.source.index, result.destination.index);\n    setState({\n      quotes\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: (...props) => console.log(props),\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          style: getListStyle(snapshot.isDraggingOver),\n          ...provided.droppableProps,\n          children: [data.map((rec, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: rec.id,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-4 col-xl-4 col-xxl-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card mx-auto\",\n                  style: {\n                    width: \"14rem\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"card-title crdt\",\n                      children: rec.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"heroLogo\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: rec.logo,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 132\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 105\n                    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-center cardValue\",\n                      children: rec.val\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this)\n          }, rec.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dr, \"zbUAWuo9hDc849+H1ytla9AciKM=\");\n\n_c = Dr;\nexport default Dr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dr\");","map":{"version":3,"sources":["/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js"],"names":["React","useState","ReactDOM","gLogo","fb","DragDropContext","Droppable","Draggable","Dr","props","state","setState","quotes","initial","data","id","title","logo","val","am","getItemStyle","isDragging","draggableStyle","background","getListStyle","isDraggingOver","overflow","onDragEnd","result","destination","index","source","reorder","console","log","provided","snapshot","innerRef","droppableProps","map","rec","draggableProps","dragHandleProps","style","width","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css'\nimport gLogo from './img/GOOGL.png'\nimport fb from './img/FB.png'\nimport am from './img/AMZN.svg'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nfunction Dr(props) {\n    \n    const [state, setState] = useState({ quotes: initial });\n    const data = [\n        {\n            id:\"1\",\n            title:\"googl\",\n            logo:gLogo,\n            val:\"1515\"\n        },\n        {\n            id:\"2\",\n            title:\"fb\",\n            logo:fb,\n            val:\"1515\"\n        },\n        {\n            id:\"3\",\n            title:\"amzn\",\n            logo:am,\n            val:\"1515\"\n        }\n    ]\n\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        \n        background: isDragging ? 'lightgreen' : 'grey',\n        ...draggableStyle,\n      });\n      \n      const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? 'lightblue' : 'lightgrey',\n        overflow: 'auto',\n      });\n      const onDragEnd = (result) =>{\n        \n        // dropped outside the list\n        if (!result.destination) {\n          return;\n        }\n        if (result.destination.index === result.source.index) {\n            return;\n          }\n          const quotes = reorder(\n            state.quotes,\n            result.source.index,\n            result.destination.index\n          );\n      \n          setState({ quotes });\n    }\n    return (\n        <>\n     <DragDropContext onDragEnd={(...props) => console.log(props)}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n              {...provided.droppableProps}>\n                {\n                    data.map((rec,index) => (\n                            <Draggable key={rec.id} draggableId={rec.id} index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getItemStyle(\n                                        snapshot.isDragging,\n                                        provided.draggableProps.style\n                                    )}\n                                    >\n                                    <div className=\"col-lg-4 col-xl-4 col-xxl-4\">\n                                            <div className=\"card mx-auto\" style={{width: \"14rem\"}}>\n                                                <div className=\"card-body\">\n                                                        <h5 className=\"card-title crdt\">{rec.title}</h5><span className=\"heroLogo\"><img src={rec.logo} alt=\"\"></img></span>\n                                                        <h3 className=\"text-center cardValue\">{rec.val}</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                </Draggable>\n                    ))\n                }\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n        \n        </>\n    )\n}\n\nexport default Dr\n"]},"metadata":{},"sourceType":"module"}