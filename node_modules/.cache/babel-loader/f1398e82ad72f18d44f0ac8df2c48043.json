{"ast":null,"code":"var _jsxFileName = \"/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css';\nimport gLogo from './img/GOOGL.png';\nimport fb from './img/FB.png';\nimport am from \"./img/AMZN.svg\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dr(props) {\n  const data = [{\n    title: \"googl\",\n    logo: gLogo,\n    val: \"1515\"\n  }, {\n    title: \"fb\",\n    logo: fb,\n    val: \"1515\"\n  }, {\n    title: \"amzn\",\n    logo: am,\n    val: \"1515\"\n  }];\n  const grid = 8;\n\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 ${grid}px 0 0`,\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n    // styles we need to apply on draggables\n    ...draggableStyle\n  });\n\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    // display: 'flex',\n    // padding: grid,\n    overflow: 'auto'\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-id\",\n        direction: \"horizontal\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          style: getListStyle(snapshot.isDraggingOver),\n          ...provided.droppableProps,\n          children: [data.map(rec => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: \"droppable1\",\n              index: 0,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-lg-4 col-xl-4 col-xxl-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card mx-auto\",\n                    style: {\n                      width: \"14rem\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"card-title crdt\",\n                        children: rec.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"heroLogo\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: rec.logo,\n                          alt: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 73,\n                          columnNumber: 132\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 105\n                      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"text-center cardValue\",\n                        children: rec.val\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n\n_c = Dr;\nexport default Dr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dr\");","map":{"version":3,"sources":["/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js"],"names":["React","ReactDOM","gLogo","fb","DragDropContext","Droppable","Draggable","Dr","props","data","title","logo","val","am","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","overflow","provided","snapshot","innerRef","droppableProps","map","rec","draggableProps","dragHandleProps","style","width","placeholder"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css'\nimport gLogo from './img/GOOGL.png'\nimport fb from './img/FB.png'\nimport am from './img/AMZN.svg'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nfunction Dr(props) {\n    const data = [\n        {\n            title:\"googl\",\n            logo:gLogo,\n            val:\"1515\"\n        },\n        {\n            title:\"fb\",\n            logo:fb,\n            val:\"1515\"\n        },\n        {\n            title:\"amzn\",\n            logo:am,\n            val:\"1515\"\n        }\n    ]\n\n    const grid = 8;\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        // some basic styles to make the items look a bit nicer\n        userSelect: 'none',\n        padding: grid * 2,\n        margin: `0 ${grid}px 0 0`,\n      \n        // change background colour if dragging\n        background: isDragging ? 'lightgreen' : 'grey',\n      \n        // styles we need to apply on draggables\n        ...draggableStyle,\n      });\n      \n      const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? 'lightblue' : 'lightgrey',\n        // display: 'flex',\n        // padding: grid,\n        overflow: 'auto',\n      });\n    return (\n        <>\n     <DragDropContext>\n        <Droppable droppableId=\"droppable-id\" direction=\"horizontal\">\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n              {...provided.droppableProps}>\n                {\n                    data.map((rec) => {\n                        return(\n                            <Draggable draggableId=\"droppable1\" index={0}>\n                                {(provided, snapshot) => (\n                                    <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getItemStyle(\n                                        snapshot.isDragging,\n                                        provided.draggableProps.style\n                                    )}\n                                    >\n                                    <div className=\"col-lg-4 col-xl-4 col-xxl-4\">\n                                            <div className=\"card mx-auto\" style={{width: \"14rem\"}}>\n                                                <div className=\"card-body\">\n                                                        <h5 className=\"card-title crdt\">{rec.title}</h5><span className=\"heroLogo\"><img src={rec.logo} alt=\"\"></img></span>\n                                                        <h3 className=\"text-center cardValue\">{rec.val}</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                </Draggable>\n                            )})\n                }\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n        \n        </>\n    )\n}\n\nexport default Dr\n"]},"metadata":{},"sourceType":"module"}