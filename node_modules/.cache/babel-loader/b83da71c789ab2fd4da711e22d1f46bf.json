{"ast":null,"code":"var _jsxFileName = \"/Users/onkarsarang/Documents/reactWork/quikie/src/components/draggable.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport 'jquery.gridstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dr(props) {\n  // {$('#basic-grid').gridstrap();}\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 ${grid}px 0 0`,\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n    // styles we need to apply on draggables\n    ...draggableStyle\n  });\n\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    display: 'flex',\n    padding: grid,\n    overflow: 'auto'\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-id\",\n        direction: \"horizontal\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          style: getListStyle(snapshot.isDraggingOver),\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: \"droppable1\",\n            index: 1,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"grid\",\n                class: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-xs-4 col-sm-2 col-md-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Hello\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-xs-4 col-sm-2 col-md-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"world\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)\n          }, 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: \"droppable2\",\n            index: 2,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"grid\",\n                class: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-xs-4 col-sm-2 col-md-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"this\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-xs-4 col-sm-2 col-md-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"end\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)\n          }, 2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Dr;\nexport default Dr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dr\");","map":{"version":3,"sources":["/Users/onkarsarang/Documents/reactWork/quikie/src/components/draggable.js"],"names":["React","ReactDOM","$","DragDropContext","Droppable","Draggable","Dr","props","getItemStyle","isDragging","draggableStyle","userSelect","padding","grid","margin","background","getListStyle","isDraggingOver","display","overflow","provided","snapshot","innerRef","droppableProps","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery'\nimport 'jquery.gridstrap'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nfunction Dr(props) {\n    // {$('#basic-grid').gridstrap();}\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        // some basic styles to make the items look a bit nicer\n        userSelect: 'none',\n        padding: grid * 2,\n        margin: `0 ${grid}px 0 0`,\n      \n        // change background colour if dragging\n        background: isDragging ? 'lightgreen' : 'grey',\n      \n        // styles we need to apply on draggables\n        ...draggableStyle,\n      });\n      \n      const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? 'lightblue' : 'lightgrey',\n        display: 'flex',\n        padding: grid,\n        overflow: 'auto',\n      });\n    return (\n        <>\n        {/* <DragDropContext>\n            <Droppable droppableId=\"droppable-1\" type=\"PERSON\">\n                {(provided, snapshot) => (\n                    <div\n                    ref={provided.innerRef}\n                    style={{ backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey' }}\n                    {...provided.droppableProps}\n                    >\n                    <Draggable key=\"key1\" draggableId=\"draggable-1\" index={0}>\n                    {(provided, snapshot) => {\n                        <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <div id=\"grid\" class=\"row\">\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>Hello</h1></div>\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>world</h1></div>\n                        </div>\n                        </div>\n                    }}\n                    </Draggable>\n                    {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext> */}\n        <DragDropContext >\n        <Droppable droppableId=\"droppable-id\" direction=\"horizontal\">\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n              {...provided.droppableProps}\n            >\n              \n                <Draggable key={1} draggableId=\"droppable1\" index={1}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      \n                    >\n                    <div id=\"grid\" class=\"row\">\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>Hello</h1></div>\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>world</h1></div>\n                        </div>\n                    </div>\n                  )}\n                </Draggable>\n              \n                <Draggable key={2} draggableId=\"droppable2\" index={2}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      \n                    >\n                    <div id=\"grid\" class=\"row\">\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>this</h1></div>\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>end</h1></div>\n                        </div>\n                    </div>\n                  )}\n                </Draggable>\n              \n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n            \n        </>\n    )\n}\n\nexport default Dr\n"]},"metadata":{},"sourceType":"module"}