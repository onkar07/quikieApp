{"ast":null,"code":"var _jsxFileName = \"/Users/onkarsarang/Documents/reactWork/quikie/src/components/draggable.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css';\nimport gLogo from './img/GOOGL.png';\nimport fb from './img/FB.png';\nimport am from \"./img/AMZN.svg\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dr(props) {\n  const data = [{\n    title: \"googl\",\n    logo: gLogo,\n    val: \"1515\"\n  }, {\n    title: \"fb\",\n    logo: fb,\n    val: \"1515\"\n  }, {\n    title: \"amzn\",\n    logo: am,\n    val: \"1515\"\n  }];\n  const grid = 8;\n\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 ${grid}px 0 0`,\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n    // styles we need to apply on draggables\n    ...draggableStyle\n  });\n\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    // display: 'flex',\n    // padding: grid,\n    overflow: 'auto'\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container heroCard text-center \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable-id\",\n            direction: \"horizontal\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              style: getListStyle(snapshot.isDraggingOver),\n              ...provided.droppableProps,\n              children: [data.map(rec => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: \"droppable1\",\n                  index: 0,\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-lg-4 col-xl-4 col-xxl-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card mx-auto\",\n                        style: {\n                          width: \"14rem\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"card-body\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            className: \"card-title crdt\",\n                            children: rec.title\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"heroLogo\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: rec.logo,\n                              alt: \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 102,\n                              columnNumber: 132\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 105\n                          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                            className: \"text-center cardValue\",\n                            children: rec.val\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 103,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 29\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Dr;\nexport default Dr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dr\");","map":{"version":3,"sources":["/Users/onkarsarang/Documents/reactWork/quikie/src/components/draggable.js"],"names":["React","ReactDOM","gLogo","fb","DragDropContext","Droppable","Draggable","Dr","props","data","title","logo","val","am","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","overflow","provided","snapshot","innerRef","droppableProps","map","rec","draggableProps","dragHandleProps","style","width","placeholder"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './css/heroCard.css'\nimport gLogo from './img/GOOGL.png'\nimport fb from './img/FB.png'\nimport am from './img/AMZN.svg'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nfunction Dr(props) {\n    const data = [\n        {\n            title:\"googl\",\n            logo:gLogo,\n            val:\"1515\"\n        },\n        {\n            title:\"fb\",\n            logo:fb,\n            val:\"1515\"\n        },\n        {\n            title:\"amzn\",\n            logo:am,\n            val:\"1515\"\n        }\n    ]\n\n    const grid = 8;\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        // some basic styles to make the items look a bit nicer\n        userSelect: 'none',\n        padding: grid * 2,\n        margin: `0 ${grid}px 0 0`,\n      \n        // change background colour if dragging\n        background: isDragging ? 'lightgreen' : 'grey',\n      \n        // styles we need to apply on draggables\n        ...draggableStyle,\n      });\n      \n      const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? 'lightblue' : 'lightgrey',\n        // display: 'flex',\n        // padding: grid,\n        overflow: 'auto',\n      });\n    return (\n        <>\n        <div className=\"container heroCard text-center \">\n            <div className=\"row\">\n        {/* <DragDropContext>\n            <Droppable droppableId=\"droppable-1\" type=\"PERSON\">\n                {(provided, snapshot) => (\n                    <div\n                    ref={provided.innerRef}\n                    style={{ backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey' }}\n                    {...provided.droppableProps}\n                    >\n                    <Draggable key=\"key1\" draggableId=\"draggable-1\" index={0}>\n                    {(provided, snapshot) => {\n                        <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <div id=\"grid\" class=\"row\">\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>Hello</h1></div>\n                        <div class=\"col-xs-4 col-sm-2 col-md-1\"><h1>world</h1></div>\n                        </div>\n                        </div>\n                    }}\n                    </Draggable>\n                    {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext> */}\n        <DragDropContext>\n        <Droppable droppableId=\"droppable-id\" direction=\"horizontal\">\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n              {...provided.droppableProps}>\n                {\n                    data.map((rec) => {\n                        return(\n                            <Draggable draggableId=\"droppable1\" index={0}>\n                                {(provided, snapshot) => (\n                                    <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getItemStyle(\n                                        snapshot.isDragging,\n                                        provided.draggableProps.style\n                                    )}\n                                    >\n                                    <div className=\"col-lg-4 col-xl-4 col-xxl-4\">\n                                            <div className=\"card mx-auto\" style={{width: \"14rem\"}}>\n                                                <div className=\"card-body\">\n                                                        <h5 className=\"card-title crdt\">{rec.title}</h5><span className=\"heroLogo\"><img src={rec.logo} alt=\"\"></img></span>\n                                                        <h3 className=\"text-center cardValue\">{rec.val}</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                </Draggable>\n                            )})\n                }\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n            </div>\n            </div>\n        </>\n    )\n}\n\nexport default Dr\n"]},"metadata":{},"sourceType":"module"}