{"ast":null,"code":"var _jsxFileName = \"/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js\";\nimport React, { useState } from 'react';\nimport './css/heroCard.css';\nimport List from \"./data\";\nimport './css/heroCard.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dr(props) {\n  const data = List.getList();\n\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    background: isDragging ? 'lightgreen' : 'transparent',\n    ...draggableStyle\n  });\n\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey' // overflow: 'auto',\n\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container heroCard text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: param => {\n            var _param$destination;\n\n            const srcI = param.source.index;\n            const desI = (_param$destination = param.destination) === null || _param$destination === void 0 ? void 0 : _param$destination.index;\n\n            if (desI) {\n              data.splice(desI, 0, data.splice(srcI, 1)[0]);\n              List.saveList(data);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            className: \"col-lg-4 col-xl-4 col-xxl-4\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              style: getListStyle(snapshot.isDraggingOver),\n              ...provided.droppableProps,\n              children: [data.map((rec, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: rec.id,\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card mx-auto\",\n                      style: {\n                        width: \"14rem\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card-body\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                          className: \"card-title crdt\",\n                          children: rec.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 53,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"heroLogo\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: rec.logo,\n                            alt: \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 53,\n                            columnNumber: 132\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 53,\n                          columnNumber: 105\n                        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"text-center cardValue\",\n                          children: rec.val\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 54,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 52,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this)\n              }, rec.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Dr;\nexport default Dr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dr\");","map":{"version":3,"sources":["/Users/onkarsarang/Documents/reactWork/quikie/src/components/dragdemo1.js"],"names":["React","useState","List","DragDropContext","Droppable","Draggable","Dr","props","data","getList","getItemStyle","isDragging","draggableStyle","background","getListStyle","isDraggingOver","param","srcI","source","index","desI","destination","splice","saveList","provided","snapshot","innerRef","droppableProps","map","rec","id","draggableProps","dragHandleProps","style","width","title","logo","val","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './css/heroCard.css'\nimport List from \"./data\";\nimport './css/heroCard.css'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nfunction Dr(props) {\n  const data = List.getList();\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        \n        background: isDragging ? 'lightgreen' : 'transparent',\n        ...draggableStyle,\n      });\n      \n      const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? 'lightblue' : 'lightgrey',\n        // overflow: 'auto',\n      });\n    return (\n        <>\n        <div className=\"container heroCard text-center\">\n            <div className=\"row\">\n     <DragDropContext onDragEnd={(param) => {\n          const srcI = param.source.index;\n          const desI = param.destination?.index;\n          if (desI) {\n            data.splice(desI, 0, data.splice(srcI, 1)[0]);\n            List.saveList(data);\n          }\n          }}>\n        <Droppable droppableId=\"droppable\" className=\"col-lg-4 col-xl-4 col-xxl-4\">\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n              {...provided.droppableProps}>\n                {\n                    data.map((rec,index) => (\n                            <Draggable key={rec.id} draggableId={rec.id} index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getItemStyle(\n                                        snapshot.isDragging,\n                                        provided.draggableProps.style\n                                    )}\n                                    >\n                                    \n                                    <div >\n                                            <div className=\"card mx-auto\" style={{width: \"14rem\"}}>\n                                                <div className=\"card-body\">\n                                                        <h5 className=\"card-title crdt\">{rec.title}</h5><span className=\"heroLogo\"><img src={rec.logo} alt=\"\"></img></span>\n                                                        <h3 className=\"text-center cardValue\">{rec.val}</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                </Draggable>\n                    ))\n                }\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n        </div>\n                </div>\n        </>\n    )\n}\n\nexport default Dr\n"]},"metadata":{},"sourceType":"module"}